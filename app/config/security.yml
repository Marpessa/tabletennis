security:
    acl:
        connection: default
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface:
            id: application_sonata_user.security.password_encoder
            algorithm: md5
#            sha512
            iterations:       1
            encode_as_base64: false

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            # - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented

    providers:
        fos_userbundle:
            id: fos_user.user_manager
        custom_fos_userbundle:
            id: application_sonata_user.security.user_provider

        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
    firewalls:
         # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       custom_fos_userbundle
                login_path:     fos_user_security_login
                use_forward:    false
                check_path:     fos_user_security_check
                failure_path:   null
                csrf_provider:  form.csrf_provider
                use_referer:    true
            logout:
                path:           fos_user_security_logout
                target:         /
            anonymous:          true
        # main:
        #     pattern: ^/
        #     form_login:
        #         login_path: fos_user_security_login
        #         check_path: fos_user_security_check
        #         provider: custom_fos_userbundle
#                provider: fos_userbundle
            #     csrf_provider: form.csrf_provider
            #     use_referer:        true
            # logout:
            #     path: fos_user_security_logout
            # anonymous:    true
        # admin:
        #     pattern:      /admin(.*)
        #     form_login:
        #         provider:       fos_userbundle
        #         login_path:     /admin/login
        #         use_forward:    false
        #         check_path:     /admin/login_check
        #         failure_path:   null
        #     logout:
        #         path:           /admin/logout
        #     anonymous:    true
    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }